const sqlite3 = require('sqlite3').verbose();

// Fun√ß√£o de normaliza√ß√£o (copiada do server)
function normalizePos(value = '') {
  const clean = String(value || '').toLowerCase().trim().replace(/[\s_-]+/g, ' ');
  
  // Mapa de sin√¥nimos
  const synonymMap = {
    'super manchete': 'supermanchete',
    'super-manchete': 'supermanchete', 
    'supermanchete': 'supermanchete',
    'manchete': 'supermanchete',
    'principal': 'supermanchete',
    'destaque': 'destaque',
    'destaques': 'destaque',
    'featured': 'destaque',
    'geral': 'geral',
    'normal': 'geral',
    'comum': 'geral',
    '': 'geral'
  };
  
  return synonymMap[clean] || 'geral';
}

const db = new sqlite3.Database('./server/noticias.db');

console.log('üîç DIAGN√ìSTICO COMPLETO DO PROBLEMA DOS DESTAQUES\n');

// 1. Verificar todas as mat√©rias e suas posi√ß√µes
db.all('SELECT id, title, posicao, publishedAt FROM noticias ORDER BY id DESC', [], (err, rows) => {
    if (err) {
        console.error('Erro:', err);
        db.close();
        return;
    }

    console.log(`üìä TOTAL DE MAT√âRIAS NO BANCO: ${rows.length}\n`);

    // Organizar por posi√ß√£o normalizada
    const byPosition = {};
    rows.forEach(row => {
        const normPos = normalizePos(row.posicao);
        if (!byPosition[normPos]) byPosition[normPos] = [];
        byPosition[normPos].push(row);
    });

    console.log('üìã DISTRIBUI√á√ÉO POR POSI√á√ÉO:');
    Object.keys(byPosition).forEach(pos => {
        console.log(`   ${pos.toUpperCase()}: ${byPosition[pos].length} mat√©rias`);
    });

    console.log('\nüì∞ MAT√âRIAS DE DESTAQUE DETALHADAS:');
    if (byPosition.destaque) {
        byPosition.destaque.forEach((row, index) => {
            console.log(`   ${index + 1}. ID: ${row.id.substring(0, 8)} | Posi√ß√£o: "${row.posicao}" | T√≠tulo: ${row.title.substring(0, 40)}...`);
        });
    } else {
        console.log('   ‚ùå NENHUMA MAT√âRIA DE DESTAQUE ENCONTRADA!');
    }

    console.log('\nüì∞ SUPER MANCHETES:');
    if (byPosition.supermanchete) {
        byPosition.supermanchete.forEach((row, index) => {
            console.log(`   ${index + 1}. ID: ${row.id.substring(0, 8)} | Posi√ß√£o: "${row.posicao}" | T√≠tulo: ${row.title.substring(0, 40)}...`);
        });
    } else {
        console.log('   ‚ùå NENHUMA SUPER MANCHETE ENCONTRADA!');
    }

    console.log('\nüîç AN√ÅLISE DO PROBLEMA:');
    
    const totalDestaques = byPosition.destaque ? byPosition.destaque.length : 0;
    const totalSuperManchetes = byPosition.supermanchete ? byPosition.supermanchete.length : 0;
    
    if (totalDestaques < 5) {
        console.log(`   ‚ùå PROBLEMA CONFIRMADO: Apenas ${totalDestaques} destaques (deveria ter 5)`);
        console.log(`   üí° POSS√çVEIS CAUSAS:`);
        console.log(`      - Mat√©rias foram rebaixadas incorretamente pela fun√ß√£o de reorganiza√ß√£o`);
        console.log(`      - Houve erro na atualiza√ß√£o das posi√ß√µes`);
        console.log(`      - Editor causou reorganiza√ß√£o desnecess√°ria`);
    } else if (totalDestaques === 5) {
        console.log(`   ‚úÖ N√∫mero correto de destaques encontrado: ${totalDestaques}`);
    } else {
        console.log(`   ‚ö†Ô∏è  Mais destaques que o esperado: ${totalDestaques} (m√°ximo deveria ser 5)`);
    }

    if (totalSuperManchetes > 1) {
        console.log(`   ‚ö†Ô∏è  M√∫ltiplas super manchetes: ${totalSuperManchetes} (deveria ser 1)`);
    }

    console.log('\nüìù PR√ìXIMOS PASSOS:');
    if (totalDestaques < 5) {
        console.log('   1. Promover mat√©rias "geral" para "destaque" at√© completar 5');
        console.log('   2. Verificar logs da fun√ß√£o reorganizePositionHierarchy');
        console.log('   3. Testar edi√ß√£o de mat√©ria para confirmar se problema foi resolvido');
    }

    db.close();
});