const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const dbPath = path.join(__dirname, 'noticias.db');
const db = new sqlite3.Database(dbPath);

console.log('üîç Investigando mat√©ria ID 4 (UESPI)...\n');

db.get('SELECT * FROM noticias WHERE id = ?', [4], (err, row) => {
  if (err) {
    console.error('‚ùå Erro ao buscar:', err);
    db.close();
    return;
  }
  
  if (!row) {
    console.log('‚ùå Mat√©ria ID 4 n√£o encontrada!');
    db.close();
    return;
  }
  
  console.log('üìã Dados da mat√©ria:');
  console.log('ID:', row.id);
  console.log('T√≠tulo:', row.titulo);
  console.log('Posi√ß√£o:', row.posicao);
  console.log('\nüñºÔ∏è Campos de imagem:');
  console.log('imagem:', row.imagem || '(vazio)');
  console.log('imagemUrl:', row.imagemUrl || '(vazio)');
  console.log('imagem_url:', row.imagem_url || '(vazio)');
  console.log('imagem_destaque:', row.imagem_destaque || '(vazio)');
  console.log('imagemDestaque:', row.imagemDestaque || '(vazio)');
  
  console.log('\nüìù Outros campos:');
  console.log('categoria:', row.categoria);
  console.log('chapeu:', row.chapeu);
  console.log('resumo:', row.resumo ? row.resumo.substring(0, 100) + '...' : '(vazio)');
  
  db.close();
  
  // Verificar qual campo est√° preenchido
  const imagemFields = {
    imagem: row.imagem,
    imagemUrl: row.imagemUrl,
    imagem_url: row.imagem_url,
    imagem_destaque: row.imagem_destaque,
    imagemDestaque: row.imagemDestaque
  };
  
  const preenchidos = Object.entries(imagemFields).filter(([k, v]) => v && v.trim());
  console.log('\n‚úÖ Campos de imagem preenchidos:', preenchidos.length);
  preenchidos.forEach(([campo, valor]) => {
    console.log(`  - ${campo}: ${valor.substring(0, 80)}...`);
  });
  
  if (preenchidos.length === 0) {
    console.log('\n‚ö†Ô∏è PROBLEMA: Nenhum campo de imagem est√° preenchido!');
  }
});
